!(function(t, e) {
  'object' == typeof exports && 'undefined' != typeof module
    ? e(exports)
    : 'function' == typeof define && define.amd
    ? define(['exports'], e)
    : e(((t = t || self)['combine-class-names'] = {}))
})(this, function(t) {
  'use strict'
  var e = /^[a-zA-Z][a-zA-Z0-9_-]*$/
  function n(t) {
    return e.test(t)
  }
  var r = /([\S]+)/g
  function a(t, e) {
    var a = e.match(r)
    a &&
      a.forEach(function(e) {
        n(e) && t(e)
      })
  }
  var o = Object.prototype.hasOwnProperty
  function f(t) {
    for (
      var e = arguments.length, n = new Array(e > 1 ? e - 1 : 0), r = 1;
      r < e;
      r++
    )
      n[r - 1] = arguments[r]
    n.forEach(function(e) {
      if ('string' == typeof e) return a(t, e)
      if ('object' == typeof e) {
        if (Array.isArray(e)) return f.apply(void 0, [t].concat(e))
        for (var n in e) o.call(e, n) && e[n] && a(t, n)
      }
    })
  }
  ;(t.default = function() {
    for (
      var t = [], e = {}, n = arguments.length, r = new Array(n), a = 0;
      a < n;
      a++
    )
      r[a] = arguments[a]
    return (
      f.apply(
        void 0,
        [
          function(n) {
            e[n] || (t.push(n), (e[n] = !0))
          },
        ].concat(r),
      ),
      t
    )
  }),
    (t.isValidClassName = n),
    (t.traverseClassNames = f),
    (t.traverseClassString = a)
})
//# sourceMappingURL=combine-class-names.umd.production.min.js.map
